name : CI
on :
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions-setup-java@v4
        with:
          distribution : 'temurin'
          java-version : '21'

      - name: Configure AWS credentials
        uses: aws-action/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key : ${{ secrets.AWS_ACCESS_KEY_SECRET }}
          aws-region: ap-northeast-2

      - name: Download properties files
        run: |
          cd ./src/main
          mkdir ./resources
          cd ./resources
          aws s3 cp ${{ secrets.S3_PROPERTIES_URL}} ./ --recursive --include "*.properties"

      - name: Upload to S3
        run: aws s3 cp ${{ secrets.S3_APPLICATION_URL }}
      - name : Login to Amazon ECR
        id: login-ecr
        uses: aws-action/amazon-ecr-login@v2
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry}}
          ECR_REPOSITORY: ${{secrets.ECR_REPOPSITORY_NAME}}
          IMAGE_TAG : ${{ github.sha }}
        run: |
          docker build -t zigg_application .
          docker tag zigg_application:latest 975050264794.dkr.ecr.ap-northeast-2.amazonaws.com/zigg_application:latest          
          docker push 975050264794.dkr.ecr.ap-northeast-2.amazonaws.com/zigg_application:latest

#      - name: Upload appspec.yml to S3
#        run: aws s3 cp appspec.yml ${{ S3_APPSPEC_URL }}
        


#  deploy:
#    runs-on: ubuntu
#    needs: build-and-push
#    environment: develop
#    steps:
#      - name: Configure AWS credentials
#        uses: aws-action/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
#          aws-region: ap-northeast-2
#
#      - name: Deploy to EC@ Auto Scaling Group
#        run: |
#          aws deploy create-deployment \
#          --application-name