name : CI
on :
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key : ${{ secrets.AWS_ACCESS_KEY_SECRET }}
          aws-region: ap-northeast-2
        run : aws s3 cp ./src/main/resources/ s3://zigg-code-deploy-bucket/properties --recursive --include "*.properties"


      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
            path: |
              ~/.gradle/caches
              ~/.gradle/wrapper
            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
            restore-keys: |
              ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Test with Gradle
        run: ./gradlew -Dspring.profiles.active=test -Pjasypt.encryptor.password=${{secrets.JASYPT_ENCRYPTOR_PASSWORD}}

      - name: Make zip file
        run: zip -r ./zigg.zip .
        shell: bash

      - name: Upload to S3
        run: aws s3 cp ./zigg.zip s3://zigg-code-deploy-bucket/application/zigg.zip

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials and Deploy
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
          aws-region: ap-northeast-2

#      - name: Code Deploy
#        uses: aws-actions/aws-codedeploy-action@v1
#        with:
#            application-name: zigg-spring-code-deploy
#            deployment-group-name: zigg-spring-deploy-group
#            s3-bucket: my-bucket
#            s3-key: app.zip
      - run: |
          aws deploy create-deployment \
          --application-name zigg-spring-code-deploy \
          --deployment-group-name zigg-spring-deploy-group \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=zigg-code-deploy-bucket,key=application/zigg.zip,bundleType=zip