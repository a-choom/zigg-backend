name: Build and Deploy to ECR and Elastic Beanstalk in Dev
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+'  # 모든 버전 형식 트래킹 (예: v1.0.0-rc1)
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Jasypt password
        env:
          JASYPT_PASSWORD: ${{ secrets.JASYPT_PASSWORD }}
        run: echo "Jasypt password is set."

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract Tag
        id: extract_tag
        run: |
          TAG=$(git describe --tags --exact-match)
          echo "RC_TAG=$TAG" >> $GITHUB_ENV

      - name: Build Docker Image
        run: |
          docker build --build-arg JASYPT_PASSWORD=$JASYPT_PASSWORD -t zigg:${{ env.RC_TAG }} -f dev.Dockerfile .

      - name: Save Docker Image as tar file
        run: |
          docker save zigg:${{ env.RC_TAG }} -o zigg_${{ env.RC_TAG }}.tar

      - name: Compress Docker Image and Dockerfile to zip
        run: |
          zip zigg_${{ env.RC_TAG }}.zip zigg_${{ env.RC_TAG }}.tar Dockerfile

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET_DEV }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload Docker Image to Elastic Beanstalk S3 Bucket
        run: |
          aws s3 cp zigg_${{ env.RC_TAG }}.zip s3://${{ secrets.S3_DEV }}/zigg_${{ env.RC_TAG }}.zip --quiet

      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk create-application-version --application-name ${{ secrets.APPLICATION_NAME_DEV }} \
          --version-label ${{ env.RC_TAG }} \
          --source-bundle S3Bucket=${{ secrets.S3_DEV }},S3Key=zigg_${{ env.RC_TAG }}.zip

          aws elasticbeanstalk update-environment --application-name ${{ secrets.APPLICATION_NAME_DEV }} \
          --environment-name ${{ secrets.ENVIRONMENT_NAME_DEV }} \
          --version-label ${{ env.RC_TAG }}
